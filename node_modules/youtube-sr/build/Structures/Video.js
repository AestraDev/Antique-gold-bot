"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Channel_1 = __importDefault(require("./Channel"));
const Thumbnail_1 = __importDefault(require("./Thumbnail"));
class Video {
    constructor(data) {
        if (!data)
            throw new Error(`Cannot instantiate the ${this.constructor.name} class without data!`);
        this._patch(data);
    }
    /**
     * Patch raw data
     * @private
     * @ignore
     */
    _patch(data) {
        var _a, _b;
        if (!data)
            data = {};
        this.id = data.id || null;
        this.title = data.title || null;
        this.description = data.description || null;
        this.durationFormatted = data.duration_raw || "0:00";
        this.duration = (data.duration < 0 ? 0 : data.duration) || 0;
        this.uploadedAt = data.uploadedAt || null;
        this.views = parseInt(data.views) || 0;
        this.thumbnail = new Thumbnail_1.default(data.thumbnail || {});
        this.channel = new Channel_1.default(data.channel || {});
        this.likes = ((_a = data.ratings) === null || _a === void 0 ? void 0 : _a.likes) || 0;
        this.dislikes = ((_b = data.ratings) === null || _b === void 0 ? void 0 : _b.dislikes) || 0;
        this.live = !!data.live;
        this.private = !!data.private;
        this.tags = data.tags || [];
        if (data.videos)
            this.videos = data.videos;
    }
    get url() {
        if (!this.id)
            return null;
        return `https://www.youtube.com/watch?v=${this.id}`;
    }
    /**
     * YouTube video embed html
     * @param {object} options Options
     * @param {string} [options.id] DOM element id
     * @param {number} [options.width] Iframe width
     * @param {number} [options.height] Iframe height
     */
    embedHTML(options = { id: "ytplayer", width: 640, height: 360 }) {
        if (!this.id)
            return null;
        return `<iframe id="${options.id || "ytplayer"}" type="text/html" width="${options.width || 640}" height="${options.height || 360}" src="${this.embedURL}" frameborder="0"></iframe>`;
    }
    /**
     * YouTube video embed url
     */
    get embedURL() {
        if (!this.id)
            return null;
        return `https://www.youtube.com/embed/${this.id}`;
    }
    get type() {
        return "video";
    }
    toString() {
        return this.url || "";
    }
    toJSON() {
        return {
            id: this.id,
            url: this.url,
            title: this.title,
            description: this.description,
            duration: this.duration,
            duration_formatted: this.durationFormatted,
            uploadedAt: this.uploadedAt,
            thumbnail: this.thumbnail.toJSON(),
            channel: {
                name: this.channel.name,
                id: this.channel.id,
                icon: this.channel.iconURL()
            },
            views: this.views,
            type: this.type,
            tags: this.tags,
            ratings: {
                likes: this.likes,
                dislikes: this.dislikes
            },
            live: this.live,
            private: this.private
        };
    }
}
exports.default = Video;
